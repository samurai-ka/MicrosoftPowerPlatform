{
  "swagger": "2.0",
  "info": {
    "title": "Mastodon microblogging",
    "description": "Mastodon is a decentralized GNU Social-compatible microblogging network made up of independent servers organized around specific themes, topics, or interests.",
    "version": "1.0.0",
    "contact": {
      "name": "Greenbrain",
      "email": "info@greenbrain.de",
      "url": "http://greenbrain.de"
    },
    "license": {
      "name": "AGPLv3",
      "url": "https://github.com/mastodon/mastodon/blob/main/LICENSE"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://joinmastodon.org/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://joinmastodon.org/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Communication;Social Media"
    }
  ],
  "host": "mastodon.example",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/timelines/public": {
      "get": {
        "operationId": "ViewPublicTimeline",
        "summary": "View public timeline",
        "description": "Get a view of the public timeline",
        "parameters": [
          {
            "$ref": "#/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StatusCollection"
            }
          }
        }
      }
    },
    "/timelines/tag/{hashtag}": {
      "get": {
        "operationId": "ViewHashtagTimeline",
        "summary": "View hashtag timeline",
        "description": "View public statuses containing the given hashtag.",
        "parameters": [
          {
            "$ref": "#/parameters/hashtagParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StatusCollection"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/timelines/home": {
      "get": {
        "operationId": "ViewHomeTimeline",
        "summary": "View home timeline",
        "description": "View statuses from followed users.",
        "parameters": [
          {
            "$ref": "#/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StatusCollection"
            }
          },
          "206": {
            "description": "Partial content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/statuses": {
      "post": {
        "security": [
          {
            "bearerAuth":[]
          }
        ],
        "operationId": "PostNewStatus",
        "summary": "Post status",
        "description": "Publish a status with the given parameters.",
        "parameters": [
          {
            "$ref": "#/parameters/statusParam"
          }
        ],
        
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }

      }
    },
    "/notifications": {
      "get": {
        "operationId": "GetAllNotifications",
        "summary": "Get all notifications",
        "description": "Notifications concerning the user. This API returns Link headers containing links to the next/previous page. However, the links can also be constructed dynamically using query params and id values.",
        "x-ms-trigger": "batch",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Max number of results to return. Defaults to 20.",
            "x-ms-summary": "Limit",
            "x-ms-visibility": "important",
            "in": "query",
            "type": "integer",
            "default": 20
          },
          {
            "name": "max_id",
            "description": "Return results older than ID",
            "x-ms-summary": "Max ID",
            "x-ms-visibility": "advanced",
            "in": "query",
            "type": "string"
          },
          {
            "name": "since_id",
            "description": "Return results newer than ID",
            "x-ms-summary": "Since ID",
            "x-ms-visibility": "advanced",
            "in": "query",
            "type": "string"
          },
          {
            "name": "min_id",
            "description": "Return results immediately newer than ID",
            "x-ms-summary": "Min ID",
            "x-ms-visibility": "advanced",
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_types",
            "description": "Array of types to exclude (follow, favourite, reblog, mention, poll, follow_request)",
            "x-ms-summary": "Exclude types",
            "x-ms-visibility": "advanced",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "description": "Return only notifications received from this account",
            "x-ms-summary": "Account ID",
            "x-ms-visibility": "advanced",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          },
          "401": {
            "description": "Invalid or missing Authorization header",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }

 },

  "definitions": {
    "Account": {
      "description": "Represents a user of Mastodon and their associated profile.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/account/"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The account id `header`.",
          "type": "string"
        },
        "username": {
          "description": "The username of the account, not including domain.",
          "type": "string"
        },
        "acct": {
          "description": "The Webfinger account URI. Equal to `username` for local users, or `username@domain` for",
          "type": "string"
        },
        "url": {
          "description": "The location of the user's profile page. (HTTPS URL)",
          "type": "string"
        },
        "display_name": {
          "description": "The profile's display name.",
          "type": "string"
        },
        "note": {
          "description": "The profile's bio / description.",
          "type": "string"
        },
        "avatar": {
          "description": "An image icon that is shown next to statuses and in the profile. The format is URL.",
          "type": "string"
        },
        "avatar_static": {
          "description": "A static version of the avatar. Equal to `avatar` if its value is a static image; different if `avatar` is an animated GIF. The format is URL.",
          "type": "string"
        },
        "header": {
          "description": "An image banner that is shown above the profile and in profile cards. The format is URL.",
          "type": "string"
        },
        "header_static": {
          "description": "A static version of the header. Equal to `header` if its value is a static image; different if `header` is an animated GIF. The format is URL.",
          "type": "string"
        },
        "locked": {
          "description": "Whether the account manually approves follow requests.",
          "type": "boolean"
        },
        "emojis": {
          "description": "Custom emoji entities to be used when rendering the profile. If none, an empty array will be returned.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Emoji"
          }
        },
        "discoverable": {
          "description": "Whether the account has opted into discovery features such as the profile directory.",
          "type": "boolean"
        },
        "created_at": {
          "description": "When the account was created.",
          "type": "string",
          "format": "date-time"
        },
        "last_status_at": {
          "description": "When the most recent status was posted.",
          "type": "string",
          "format": "date-time"
        },
        "statuses_count": {
          "description": "How many statuses are attached to this account.",
          "type": "integer"
        },
        "followers_count": {
          "description": "The reported followers of this profile.",
          "type": "integer"
        },
        "following_count": {
          "description": "The reported follows of this profile.",
          "type": "integer"
        },
        "moved": {
          "$ref": "#/definitions/Account"
        },
        "fields": {
          "description": "Additional metadata attached to a profile as name-value pairs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        },
        "bot": {
          "description": "A presentational flag. Indicates that the account may perform automated actions, may not be monitored, or identifies as a robot.",
          "type": "boolean"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "suspended": {
          "description": "An extra entity returned when an account is suspended.",
          "type": "boolean"
        },
        "mute_expires_at": {
          "description": "When a timed mute will expire, if applicable. ISO 8601 Datetime.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Activity": {
      "description": "Represents a weekly bucket of instance activity.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/activity/"
      },
      "type": "object",
      "properties": {
        "week": {
          "description": "Midnight at the first day of the week.  (UNIX Timestamp).",
          "type": "string"
        },
        "statuses": {
          "description": "Statuses created since the week began, String (cast from an integer).",
          "type": "string"
        },
        "logins": {
          "description": "User logins since the week began, String (cast from an integer).",
          "type": "string"
        },
        "registrations": {
          "description": "User registrations since the week began, String (cast from an integer).",
          "type": "string"
        }
      }
    },
    "AdminAccount": {
      "description": "Admin-level information about a given account.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/admin-account/"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the account in the database. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        },
        "username": {
          "description": "The username of the account.",
          "type": "string"
        },
        "created_at": {
          "description": "When the account was first discovered.",
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "description": "The email address associated with the account.",
          "type": "string"
        },
        "ip": {
          "description": "The IP address last used to login to this account.",
          "type": "string"
        },
        "locale": {
          "description": "The locale of the account. ISO 639 Part 1 two-letter language code.",
          "type": "string"
        },
        "invite_request": {
          "description": "Invite request text ???",
          "type": "string"
        },
        "role": {
          "description": "The current role of the account. Enumerable oneOf.",
          "type": "string"
        },
        "confirmed": {
          "description": "Whether the account has confirmed their email address.",
          "type": "boolean"
        },
        "approved": {
          "description": "Whether the account is currently approved.",
          "type": "boolean"
        },
        "disabled": {
          "description": "Whether the account is currently disabled.",
          "type": "boolean"
        },
        "silenced": {
          "description": "Whether the account is currently silenced.",
          "type": "boolean"
        },
        "suspended": {
          "description": "Whether the account is currently suspended.",
          "type": "boolean"
        },
        "account": {
          "$ref": "#/definitions/Account"
        },
        "created_by_application_id": {
          "description": "The ID of the application that created this account. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        },
        "invited_by_account_id": {
          "description": "The ID of the account that invited this user. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        }
      }
    },
    "AdminReport": {
      "description": "Admin-level information about a filed report.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/admin-report/"
      },
      "properties": {
        "id": {
          "description": "The ID of the report in the database. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        },
        "action_taken": {
          "description": "The action taken to resolve this report. Enumerable oneOf.",
          "type": "string"
        },
        "comment": {
          "description": "An optional reason for reporting.",
          "type": "string"
        },
        "created_at": {
          "description": "The time the report was filed.",
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "description": "The time of last action on this report.",
          "type": "string",
          "format": "date-time"
        },
        "account": {
          "$ref": "#/definitions/Account"
        },
        "target_account": {
          "$ref": "#/definitions/Account"
        },
        "assigned_account": {
          "$ref": "#/definitions/Account"
        },
        "statuses": {
          "description": "Statuses attached to the report, for context.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Status"
          }
        }
      }
    },
    "Announcement": {
      "description": "Represents an announcement set by an administrator.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/announcement/"
      },
      "required": [
        "id",
        "text",
        "published",
        "all_day",
        "created_at",
        "updated_at",
        "read"
      ],
      "properties": {
        "id": {
          "description": "The announcement id. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        },
        "text": {
          "description": "The content of the announcement.",
          "type": "string"
        },
        "published": {
          "description": "Whether the announcement is currently active.",
          "type": "boolean"
        },
        "all_day": {
          "description": "Whether the announcement has a start/end time.",
          "type": "boolean"
        },
        "created_at": {
          "description": "When the announcement was created.",
          "type": "string"
        },
        "updated_at": {
          "description": "When the announcement was last updated. ISO 8601 Datetime.",
          "type": "string"
        },
        "read": {
          "description": "Whether the announcement has been read by the user.",
          "type": "boolean"
        },
        "scheduled_at": {
          "description": "When the future announcement was scheduled. ISO 8601 Datetime.",
          "type": "string"
        },
        "starts_at": {
          "description": "When the future announcement will start. ISO 8601 Datetime.",
          "type": "string"
        },
        "ends_at": {
          "description": "When the future announcement will end. ISO 8601 Datetime.",
          "type": "string"
        }
      }
    },
    "AnnouncementReaction": {
      "description": "Represents an emoji reaction to an Announcement.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/announcementreaction/"
      },
      "properties": {
        "name": {
          "description": "The emoji used for the reaction. Either a unicode emoji, or a custom emoji's shortcode.",
          "type": "string"
        },
        "count": {
          "description": "The total number of users who have added this reaction.",
          "type": "integer"
        },
        "me": {
          "description": "Whether the authorized user has added this reaction to the announcement.",
          "type": "boolean"
        },
        "url": {
          "description": "A link to the custom emoji (URL).",
          "type": "string"
        },
        "static_url": {
          "description": "A link to a non-animated version of the custom emoji (URL).",
          "type": "string"
        }
      }
    },
    "Application": {
      "description": "Represents an application that interfaces with the REST API to access accounts or post statuses.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/application/"
      },
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "The name of your application.",
          "type": "string"
        },
        "website": {
          "description": "The website associated with your application. Must be URL.",
          "type": "string"
        },
        "vapid_key": {
          "description": "Used for Push Streaming API. Returned with [POST /api/v1/apps](https://docs.joinmastodon.org/methods/apps/#create-an-application). Equivalent to [PushSubscription#server_key](https://docs.joinmastodon.org/entities/pushsubscription/#server_key)",
          "type": "string"
        },
        "client_id": {
          "description": "Client ID key, to be used for obtaining OAuth tokens",
          "type": "string"
        },
        "client_secret": {
          "description": "Client secret key, to be used for obtaining OAuth tokens",
          "type": "string"
        }
      }
    },
    "Attachment": {
      "description": "Represents a file or media attachment that can be added to a status.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/attachment/"
      },
      "required": [
        "id",
        "type",
        "url",
        "preview_url"
      ],
      "properties": {
        "id": {
          "description": "The ID of the attachment in the database. Cast from an integer but not guaranteed to be a number",
          "type": "string"
        },
        "type": {
          "description": "The type of the attachment.",
          "type": "string",
          "enum": [
            "unknown",
            "image",
            "gifv",
            "video",
            "audio"
          ]
        },
        "url": {
          "description": "The location of the original full-size attachment.",
          "type": "string"
        },
        "preview_url": {
          "description": "The location of a scaled-down preview of the attachment.",
          "type": "string"
        },
        "remote_url": {
          "description": "The location of the full-size original attachment on the remote website. String or null if the attachment is local.",
          "type": "string"
        },
        "meta": {
          "description": "Metadata returned by Paperclip.",
          "type": "object"
        },
        "description": {
          "description": "Alternate text that describes what is in the media attachment, to be used for the visually impaired or when media attachments do not load.",
          "type": "string"
        },
        "blurhash": {
          "description": "A hash computed by the [BlurHash algorithm](https://github.com/woltapp/blurhash), for generating colorful preview thumbnails when media has not been downloaded yet.",
          "type": "string"
        }
      }
    },
    "Card": {
      "description": "Represents a rich preview card that is generated using OpenGraph tags from a URL.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/card/"
      },
      "required": [
        "url",
        "title",
        "description",
        "type"
      ],
      "properties": {
        "url": {
          "description": "Location of linked resource.",
          "type": "string"
        },
        "title": {
          "description": "Title of linked resource.",
          "type": "string"
        },
        "description": {
          "description": "Description of preview.",
          "type": "string"
        },
        "type": {
          "description": "The type of the preview card. String (Enumerable, oneOf).",
          "type": "string",
          "enum": [
            "link",
            "photo",
            "video",
            "rich"
          ]
        },
        "author_name": {
          "description": "The author of the original resource.",
          "type": "string"
        },
        "author_url": {
          "description": "A link to the author of the original resource.",
          "type": "string"
        },
        "provider_name": {
          "description": "The provider of the original resource.",
          "type": "string"
        },
        "provider_url": {
          "description": "A link to the provider of the original resource.",
          "type": "string"
        },
        "html": {
          "description": "HTML to be used for generating the preview card.",
          "type": "string"
        },
        "width": {
          "description": "Width of preview, in pixels.",
          "type": "integer"
        },
        "height": {
          "description": "Height of preview, in pixels.",
          "type": "integer"
        },
        "image": {
          "description": "Preview thumbnail (URL).",
          "type": "string"
        },
        "blurhash": {
          "description": "A hash computed by the [BlurHash algorithm](https://github.com/woltapp/blurhash), for generating colorful preview thumbnails when media has not been downloaded yet.",
          "type": "string"
        }
      }
    },
    "Context": {
      "description": "Represents the tree around a given status. Used for reconstructing threads of statuses.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/context/"
      },
      "required": [
        "ancestors",
        "descendants"
      ],
      "properties": {
        "ancestors": {
          "description": "Parents in the thread.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Status"
          }
        },
        "descendants": {
          "description": "Children in the thread.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Status"
          }
        }
      }
    },
    "Conversation": {
      "description": "Represents a conversation with \"direct message\" visibility.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/conversation/"
      },
      "required": [
        "id",
        "accounts",
        "unread"
      ],
      "properties": {
        "id": {
          "description": "Local database ID of the conversation. Cast from an integer, but not guaranteed to be a number",
          "type": "string"
        },
        "accounts": {
          "description": "Participants in the conversation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        },
        "unread": {
          "description": "Is the conversation currently marked as unread?",
          "type": "boolean"
        },
        "last_status": {
          "$ref": "#/definitions/Status"
        }
      }
    },
    "Emoji": {
      "description": "Represents a custom emoji.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/emoji/"
      },
      "type": "object",
      "required": [
        "shortcode",
        "url",
        "static_url",
        "visible_in_picker"
      ],
      "properties": {
        "shortcode": {
          "description": "The name of the custom emoji.",
          "type": "string"
        },
        "url": {
          "description": "A link to the custom emoji. The format is URL.",
          "type": "string"
        },
        "static_url": {
          "description": "A link to a static copy of the custom emoji. The format is URL.",
          "type": "string"
        },
        "visible_in_picker": {
          "description": "Whether this Emoji should be visible in the picker or unlisted.",
          "type": "boolean"
        },
        "category": {
          "description": "Used for sorting custom emoji in the picker.",
          "type": "string"
        }
      }
    },
    "Error": {
      "description": "Represents an error message.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/error/"
      },
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "string"
        },
        "error_description": {
          "type": "string"
        }
      }
    },
    "FeaturedTag": {
      "description": "Represents a hashtag that is featured on a profile.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/featuredtag/"
      },
      "properties": {
        "id": {
          "description": "The internal ID of the featured tag in the database. Cast from integer but not guaranteed to be a number",
          "type": "string"
        },
        "name": {
          "description": "The name of the hashtag being featured.",
          "type": "string"
        },
        "url": {
          "description": "A link to all statuses by a user that contain this hashtag.",
          "type": "string"
        },
        "statuses_count": {
          "description": "The number of authored statuses containing this hashtag.",
          "type": "integer"
        },
        "last_status_at": {
          "description": "The timestamp of the last authored status containing this hashtag. ISO 8601 Datetime.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Field": {
      "description": "Represents a profile field as a name-value pair with optional verification.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/field/"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The key of a given field's key-value pair.",
          "type": "string"
        },
        "value": {
          "description": "The value associated with the `name` key.",
          "type": "string"
        },
        "verified_at": {
          "description": "Timestamp of when the server verified a URL value for a rel=\"me” link. If `value` is a verified URL. Otherwise, null",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Filter": {
      "description": "Represents a user-defined filter for determining which statuses should not be shown to the user.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/filter/"
      },
      "properties": {
        "id": {
          "description": "The ID of the filter in the database. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        },
        "phrase": {
          "description": "The text to be filtered.",
          "type": "string"
        },
        "context": {
          "description": "The contexts in which the filter should be applied.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "home",
              "notifications",
              "public",
              "thread"
            ]
          }
        },
        "expires_at": {
          "description": "When the filter should no longer be applied. ISO 8601 Datetime, or null if the filter does not expire",
          "type": "string"
        },
        "irreversible": {
          "description": "Should matching entities in home and notifications be dropped by the server?",
          "type": "boolean"
        },
        "whole_word": {
          "description": "Should the filter consider word boundaries?",
          "type": "boolean"
        }
      }
    },
    "History": {
      "description": "Represents daily usage history of a hashtag.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/history/"
      },
      "required": [
        "day",
        "uses",
        "accounts"
      ],
      "properties": {
        "day": {
          "description": "UNIX timestamp on midnight of the given day.",
          "type": "string"
        },
        "uses": {
          "description": "the counted usage of the tag within that day. Cast from an integer.",
          "type": "string"
        },
        "accounts": {
          "description": "the total of accounts using the tag within that day. Cast from an integer.",
          "type": "string"
        }
      }
    },
    "IdentityProof": {
      "description": "Represents a proof from an external identity provider.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/identityproof/"
      },
      "properties": {
        "provider": {
          "description": "The name of the identity provider.",
          "type": "string"
        },
        "provider_username": {
          "description": "The account owner's username on the identity provider's service.",
          "type": "string"
        },
        "profile_url": {
          "description": "The account owner's profile URL on the identity provider.",
          "type": "string"
        },
        "proof_url": {
          "description": "A link to a statement of identity proof, hosted by the identity provider.",
          "type": "string"
        },
        "updated_at": {
          "description": "When the identity proof was last updated. ISO 8601 Datetime.",
          "type": "string"
        }
      }
    },
    "Instance": {
      "description": "Represents the software instance of Mastodon running on this domain.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/instance/"
      },
      "required": [
        "uri",
        "title",
        "description",
        "short_description",
        "email",
        "version",
        "languages",
        "registrations",
        "approval_required",
        "invites_enabled",
        "urls",
        "stats"
      ],
      "properties": {
        "uri": {
          "description": "The domain name of the instance.",
          "type": "string"
        },
        "title": {
          "description": "The title of the website.",
          "type": "string"
        },
        "description": {
          "description": "Admin-defined description of the Mastodon site.",
          "type": "string"
        },
        "short_description": {
          "description": "A shorter description defined by the admin.",
          "type": "string"
        },
        "email": {
          "description": "An email that may be contacted for any inquiries.",
          "type": "string"
        },
        "version": {
          "description": "The version of Mastodon installed on the instance.",
          "type": "string"
        },
        "languages": {
          "description": "Primary languages of the website and its staff. ISO 639 Part 1-5 language codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "registrations": {
          "description": "Whether registrations are enabled.",
          "type": "boolean"
        },
        "approval_required": {
          "description": "Whether registrations require moderator approval.",
          "type": "boolean"
        },
        "invites_enabled": {
          "description": "Whether invites are enabled.",
          "type": "boolean"
        },
        "urls": {
          "description": "URLs of interest for clients apps.",
          "type": "object"
        },
        "stats": {
          "description": "Statistics about how much information the instance contains.",
          "type": "object"
        },
        "thumbnail": {
          "description": "Banner image for the website.",
          "type": "string"
        },
        "contact_account": {
          "$ref": "#/definitions/Account"
        }
      }
    },
    "List": {
      "description": "Represents a list of some users that the authenticated user follows.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/list/"
      },
      "required": [
        "id",
        "title",
        "replies_policy"
      ],
      "properties": {
        "id": {
          "description": "The internal database ID of the list. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        },
        "title": {
          "description": "The user-defined title of the list.",
          "type": "string"
        },
        "replies_policy": {
          "description": "The user-defined title of the list.",
          "type": "string",
          "enum": [
            "followed",
            "list",
            "none"
          ]
        }
      }
    },
    "Marker": {
      "description": "Represents the last read position within a user's timelines.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/marker/"
      },
      "properties": {
        "home": {
          "description": "Information about the user's position in the home timeline.",
          "type": "object"
        },
        "notifications": {
          "description": "Information about the user's position in their notifications.",
          "type": "object"
        },
        "last_read_id": {
          "description": "The ID of the most recently viewed entity. Cast from integer but not guaranteed to be a number",
          "type": "string"
        },
        "updated_at": {
          "description": "The timestamp of when the marker was set. ISO 8601 Datetime.",
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "description": "Used for locking to prevent write conflicts.",
          "type": "integer"
        }
      }
    },
    "Mention": {
      "description": "Represents a mention of a user within the content of a status.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/mention/"
      },
      "required": [
        "id",
        "username",
        "acct",
        "url"
      ],
      "properties": {
        "id": {
          "description": "The account id of the mentioned user. Cast from an integer, but not guaranteed to be a number",
          "type": "string"
        },
        "username": {
          "description": "The username of the mentioned user.",
          "type": "string"
        },
        "acct": {
          "description": "The webfinger acct URI of the mentioned user. Equivalent to `username` for local users, or `username@domain` for remote users.",
          "type": "string"
        },
        "url": {
          "description": "The location of the mentioned user's profile.",
          "type": "string"
        }
      }
    },
    "Notification": {
      "description": "Represents a notification of an event relevant to the user.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/notification/"
      },
      "required": [
        "id",
        "type",
        "created_at",
        "account"
      ],
      "properties": {
        "id": {
          "description": "The id of the notification in the database. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        },
        "type": {
          "description": "The type of event that resulted in the notification.",
          "type": "string",
          "enum": [
            "follow",
            "follow_request",
            "mention",
            "reblog",
            "favourite",
            "poll",
            "status"
          ]
        },
        "created_at": {
          "description": "The timestamp of the notification. ISO 8601 Datetime.",
          "type": "string",
          "format": "date-time"
        },
        "account": {
          "$ref": "#/definitions/Account"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      }
    },
    "Poll": {
      "description": "Represents a poll attached to a status.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/poll/"
      },
      "properties": {
        "id": {
          "description": "The ID of the poll in the database. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        },
        "expires_at": {
          "description": "When the poll ends. ISO 8601 Datetime, or null if the poll does not end.",
          "type": "string",
          "format": "date-time"
        },
        "expired": {
          "description": "Is the poll currently expired?",
          "type": "boolean"
        },
        "multiple": {
          "description": "Does the poll allow multiple-choice answers?",
          "type": "boolean"
        },
        "votes_count": {
          "description": "How many votes have been received.",
          "type": "integer"
        },
        "voters_count": {
          "description": "How many unique accounts have voted on a multiple-choice poll. Number, or null if `multiple` is false.",
          "type": "integer"
        },
        "voted": {
          "description": "When called with a user token, has the authorized user voted? Boolean, or null if no current user",
          "type": "boolean"
        },
        "own_votes": {
          "description": "When called with a user token, which options has the authorized user chosen? Contains an array of index values for `options`. Array of Number, or null if no current user",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "options": {
          "description": "Possible answers for the poll.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Poll::Option"
          }
        },
        "emojis": {
          "description": "Custom emoji to be used for rendering poll options.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Emoji"
          }
        }
      }
    },
    "Poll::Option": {
      "description": "Option attributes",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/poll/"
      },
      "properties": {
        "title": {
          "description": "The text value of the poll option.",
          "type": "string"
        },
        "votes_count": {
          "description": "The total number of received votes for this option.",
          "type": "string"
        }
      }
    },
    "Preferences": {
      "description": "Represents a user's preferences.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/preferences/"
      },
      "properties": {
        "posting:default:visibility": {
          "description": "Default visibility for new posts. Equivalent to [Source#privacy](https://docs.joinmastodon.org/entities/source/#privacy).",
          "type": "string",
          "enum": [
            "public",
            "unlisted",
            "private",
            "direct"
          ]
        },
        "posting:default:sensitive": {
          "description": "Default sensitivity flag for new posts. Equivalent to [Source#sensitive](https://docs.joinmastodon.org/entities/source/#sensitive).",
          "type": "boolean"
        },
        "posting:default:language": {
          "description": "Default language for new posts. Equivalent to [Source#language](https://docs.joinmastodon.org/entities/source/#language). ISO 639-1 language two-letter code, or null",
          "type": "string"
        },
        "reading:expand:media": {
          "description": "Whether media attachments should be automatically displayed or blurred/hidden.",
          "type": "string",
          "enum": [
            "default",
            "show_all",
            "hide_all"
          ]
        },
        "reading:expand:spoilers": {
          "description": "Whether CWs should be expanded by default.",
          "type": "boolean"
        }
      }
    },
    "PushSubscription": {
      "description": "Represents a subscription to the push streaming server.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/pushsubscription/"
      },
      "required": [
        "id",
        "endpoint",
        "server_key",
        "alerts"
      ],
      "properties": {
        "id": {
          "description": "The ID of the push subscription in the database. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        },
        "endpoint": {
          "description": "Where push alerts will be sent to.",
          "type": "string"
        },
        "server_key": {
          "description": "The streaming server's VAPID key.",
          "type": "string"
        },
        "alerts": {
          "description": "Which alerts should be delivered to the `endpoint`.",
          "type": "object"
        }
      }
    },
    "Relationship": {
      "description": "Represents the relationship between accounts, such as following / blocking / muting / etc.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/relationship/"
      },
      "required": [
        "id",
        "following",
        "requested",
        "endorsed",
        "followed_by",
        "muting",
        "muting_notifications",
        "showing_reblogs",
        "notifying",
        "blocking",
        "domain_blocking",
        "blocked_by",
        "note"
      ],
      "properties": {
        "id": {
          "description": "The account id. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        },
        "following": {
          "description": "Are you following this user?",
          "type": "boolean"
        },
        "requested": {
          "description": "Do you have a pending follow request for this user?",
          "type": "boolean"
        },
        "endorsed": {
          "description": "Are you featuring this user on your profile?",
          "type": "boolean"
        },
        "followed_by": {
          "description": "Are you followed by this user?",
          "type": "boolean"
        },
        "muting": {
          "description": "Are you muting this user?",
          "type": "boolean"
        },
        "muting_notifications": {
          "description": "Are you muting notifications from this user?",
          "type": "boolean"
        },
        "showing_reblogs": {
          "description": "Are you receiving this user's boosts in your home timeline?",
          "type": "boolean"
        },
        "notifying": {
          "description": "Have you enabled notifications for this user?",
          "type": "boolean"
        },
        "blocking": {
          "description": "Are you blocking this user?",
          "type": "boolean"
        },
        "domain_blocking": {
          "description": "Are you blocking this user's domain?",
          "type": "boolean"
        },
        "blocked_by": {
          "description": "Is this user blocking you?",
          "type": "boolean"
        },
        "note": {
          "description": "This user's profile bio",
          "type": "string"
        }
      }
    },
    "Report": {
      "description": "Reports filed against users and/or statuses, to be taken action on by moderators.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/report/"
      },
      "properties": {
        "id": {
          "type": "string"
        },
        "action_taken": {
          "type": "boolean"
        },
        "action_taken_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "category": {
          "type": "string",
          "enum": [
            "other",
            "spam",
            "violation"
          ]
        },
        "comment": {
          "type": "string"
        },
        "forwarded": {
          "type": "boolean"
        },
        "status_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "rule_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "target_account": {
          "$ref": "#/definitions/Account"
        }
      }
    },
    "Results": {
      "description": "Represents the results of a search.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/results/"
      },
      "required": [
        "accounts",
        "statuses",
        "hashtags"
      ],
      "properties": {
        "accounts": {
          "description": "Accounts which match the given query.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        },
        "statuses": {
          "description": "Statuses which match the given query.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Status"
          }
        },
        "hashtags": {
          "description": "Hashtags which match the given query.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        }
      }
    },
    "ScheduledStatus": {
      "description": "Represents a status that will be published at a future scheduled date.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/scheduledstatus/"
      },
      "required": [
        "id",
        "scheduled_at",
        "params",
        "media_attachments"
      ],
      "properties": {
        "id": {
          "description": "ID of the scheduled status in the database. Cast from an integer, but not guaranteed to be a number.",
          "type": "string"
        },
        "scheduled_at": {
          "description": "ID of the status in the database. ISO 8601 Datetime.",
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "$ref": "#/definitions/StatusParams"
        },
        "media_attachments": {
          "description": "Array of attachements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        }
      }
    },
    "StatusParams": {
      "properties": {
        "text": {
          "description": "text",
          "type": "string"
        },
        "in_reply_to_id": {
          "description": "in_reply_to_id",
          "type": "string"
        },
        "media_ids": {
          "description": "media_ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sensitive": {
          "description": "sensitive",
          "type": "boolean"
        },
        "spoiler_text": {
          "description": "spoiler_text",
          "type": "string"
        },
        "visibility": {
          "description": "visibility",
          "type": "string"
        },
        "scheduled_at": {
          "description": "scheduled_at",
          "type": "string",
          "format": "date-time"
        },
        "application_id": {
          "description": "application_id",
          "type": "string"
        }
      }
    },
    "Source": {
      "description": "Represents display or publishing preferences of user's own account. Returned as an additional entity when verifying and updated credentials, as an attribute of Account.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/source/"
      },
      "type": "object",
      "properties": {
        "note": {
          "description": "Profile bio",
          "type": "string"
        },
        "fields": {
          "description": "Metadata about the account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        },
        "privacy": {
          "description": "The default post privacy to be used for new statuses.",
          "type": "string",
          "enum": [
            "public",
            "unlisted",
            "private",
            "direct"
          ]
        },
        "sensitive": {
          "description": "Whether new statuses should be marked sensitive by default.",
          "type": "boolean"
        },
        "language": {
          "description": "The default posting language for new statuses, ISO 639-1 language two-letter code.",
          "type": "string"
        },
        "follow_requests_count": {
          "description": "The number of pending follow requests",
          "type": "integer"
        }
      }
    },
    "StatusCollection": {
      "description": "Represents a status posted by an account",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Status"
      }
    },
    "Status": {
      "description": "Represents a status posted by an account.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/status/"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the status in the database. Cast from an integer but not guaranteed to be a number.",
          "type": "string"
        },
        "uri": {
          "description": "URI of the status used for federation.",
          "type": "string"
        },
        "created_at": {
          "description": "The date when this status was created.",
          "type": "string",
          "format": "date-time"
        },
        "account": {
          "$ref": "#/definitions/Account"
        },
        "content": {
          "description": "HTML-encoded status content.",
          "type": "string"
        },
        "visibility": {
          "description": "Visibility of this status.",
          "type": "string",
          "enum": [
            "public",
            "unlisted",
            "private",
            "direct"
          ]
        },
        "sensitive": {
          "description": "Is this status marked as sensitive content?",
          "type": "boolean"
        },
        "spoiler_text": {
          "description": "Subject or summary line, below which status content is collapsed until expanded.",
          "type": "string"
        },
        "media_attachments": {
          "description": "Media that is attached to this status.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "application": {
          "$ref": "#/definitions/Application"
        },
        "mentions": {
          "description": "Mentions of users within the status content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mention"
          }
        },
        "tags": {
          "description": "Hashtags used within the status content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "emojis": {
          "description": "Custom emoji to be used when rendering status content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Emoji"
          }
        },
        "reblogs_count": {
          "description": "How many boosts this status has received.",
          "type": "integer"
        },
        "favourites_count": {
          "description": "How many favourites this status has received.",
          "type": "integer"
        },
        "replies_count": {
          "description": "How many replies this status has received.",
          "type": "integer"
        },
        "url": {
          "description": "A link to the status's HTML representation.",
          "type": "string"
        },
        "in_reply_to_id": {
          "description": "ID of the status being replied. Cast from an integer but not guaranteed to be a number.",
          "type": "string"
        },
        "in_reply_to_account_id": {
          "description": "ID of the account being replied to.",
          "type": "string"
        },
        "reblog": {
          "$ref": "#/definitions/Status"
        },
        "poll": {
          "$ref": "#/definitions/Poll"
        },
        "card": {
          "$ref": "#/definitions/Card"
        },
        "language": {
          "description": "Primary language of this status. ISO 639 Part 1 two-letter language code.",
          "type": "string"
        },
        "text": {
          "description": "Plain-text source of a status. Returned instead of `content` when status is deleted, so the user may redraft from the source text without the client having to reverse-engineer the original text from the HTML content.",
          "type": "string"
        },
        "favourited": {
          "description": "Have you favourited this status?",
          "type": "boolean"
        },
        "reblogged": {
          "description": "Have you boosted this status?",
          "type": "boolean"
        },
        "muted": {
          "description": "Have you muted notifications for this status's conversation?",
          "type": "boolean"
        },
        "bookmarked": {
          "description": "Have you bookmarked this status?",
          "type": "boolean"
        },
        "pinned": {
          "description": "Have you pinned this status? Only appears if the status is pinnable.",
          "type": "boolean"
        }
      }
    },
    "Tag": {
      "description": "Represents a hashtag used within the content of a status.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/tag/"
      },
      "required": [
        "name",
        "url"
      ],
      "properties": {
        "name": {
          "description": "The value of the hashtag after the `#` sign.",
          "type": "string"
        },
        "url": {
          "description": "A link to the hashtag on the instance.",
          "type": "string"
        },
        "history": {
          "description": "Usage statistics for given days.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/History"
          }
        }
      }
    },
    "Token": {
      "description": "Represents an OAuth token used for authenticating with the API and performing actions.",
      "externalDocs": {
        "url": "https://docs.joinmastodon.org/entities/token/"
      },
      "properties": {
        "access_token": {
          "description": "An OAuth token to be used for authorization.",
          "type": "string"
        },
        "token_type": {
          "description": "The OAuth token type. Mastodon uses `Bearer` tokens.",
          "type": "string"
        },
        "scope": {
          "description": "The OAuth scopes granted by this token, space-separated.",
          "type": "string"
        },
        "created_at": {
          "description": "When the token was generated. UNIX Timestamp.",
          "type": "integer"
        }
      }
    }
  },

  "parameters": {
    "statusParam": {
      "name": "status",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status",
            "x-ms-summary": "Toot this!",
            "x-ms-visibility": "important"
          },
          "visibility": {
            "type": "string",
            "description": "How shall the toot be listed",
            "enum": [
              "public",
              "unlisted",
              "private",
              "direct"
            ],
            "default": "unlisted",
            "x-ms-summary": "Visibility",
            "x-ms-visibility": "advanced"
          },
          "sensitive": {
            "type": "boolean",
            "description": "Mark status and attached media as sensitive?",
            "x-ms-summary": "Sensitive content",
            "x-ms-visibility": "advanced"
          }
        }
      },
      "x-ms-summary": "The text content of the status"
    },
    "limitParam": {
      "name": "limit",
      "type": "integer",
      "in": "query",
      "description": "Maximum number of results to return. Defaults to 20 statuses. Max 40 statuses.",
      "x-ms-summary": "Max results",
      "x-ms-visibility": "advanced"
    },
    "hashtagParam": {
      "name": "hashtag",
      "type": "string",
      "in": "path",
      "description": "The name of the hashtag",
      "required": true,
      "x-ms-summary": "Hashtag",
      "x-ms-url-encoding": "single"
    }
  }
}